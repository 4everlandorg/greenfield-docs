"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[6178],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>v});var i=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,i,n=function(e,r){if(null==e)return{};var t,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=i.createContext({}),l=function(e){var r=i.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},p=function(e){var r=l(e.components);return i.createElement(s.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},f=i.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(t),f=n,v=d["".concat(s,".").concat(f)]||d[f]||u[f]||a;return t?i.createElement(v,o(o({ref:r},p),{},{components:t})):i.createElement(v,o({ref:r},p))}));function v(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,o=new Array(a);o[0]=f;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c[d]="string"==typeof e?e:n,o[1]=c;for(var l=2;l<a;l++)o[l]=t[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},51426:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var i=t(87462),n=(t(67294),t(3905));const a={title:"Receiver",order:8},o="Receiver",c={unversionedId:"guide/storage-provider/services/receiver",id:"guide/storage-provider/services/receiver",title:"Receiver",description:"Receiver is responsible for accepting the piece data that replicated from the primary SP.",source:"@site/docs/guide/storage-provider/services/receiver.md",sourceDirName:"guide/storage-provider/services",slug:"/guide/storage-provider/services/receiver",permalink:"/greenfield-docs/docs/guide/storage-provider/services/receiver",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/guide/storage-provider/services/receiver.md",tags:[],version:"current",frontMatter:{title:"Receiver",order:8},sidebar:"guideSidebar",previous:{title:"Uploader",permalink:"/greenfield-docs/docs/guide/storage-provider/services/uploader"},next:{title:"Downloader",permalink:"/greenfield-docs/docs/guide/storage-provider/services/downloader"}},s={},l=[{value:"Key Workflow",id:"key-workflow",level:2},{value:"Verify the replicate approval",id:"verify-the-replicate-approval",level:3},{value:"Store the replicated piece data",id:"store-the-replicated-piece-data",level:3},{value:"Generate integrity hash and signature",id:"generate-integrity-hash-and-signature",level:3}],p={toc:l},d="wrapper";function u(e){let{components:r,...t}=e;return(0,n.kt)(d,(0,i.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"receiver"},"Receiver"),(0,n.kt)("p",null,"Receiver is responsible for accepting the piece data that replicated from the primary SP."),(0,n.kt)("h2",{id:"key-workflow"},"Key Workflow"),(0,n.kt)("h3",{id:"verify-the-replicate-approval"},"Verify the replicate approval"),(0,n.kt)("p",null,"Receiver receives the ReceivePieceRequest from Gateway that has been basic authenticated, and Gateway will also verify\nthe replicate approval whether t signed by self."),(0,n.kt)("h3",{id:"store-the-replicated-piece-data"},"Store the replicated piece data"),(0,n.kt)("p",null,"Receiver receives data stream and store in piece store."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-protobuf"},"// ReceivePieceRequest is request type for the ReceivePiece RPC method.\nmessage ReceivePieceRequest {\n  // object_info defines the information of the object.\n  bnbchain.greenfield.storage.ObjectInfo object_info = 1;\n  // segment_idx defines the index of segment for piece data.\n  uint32 segment_idx = 2;\n  // replica_idx defines the index of replicate for piece data.\n  uint32 replicate_idx = 3;\n  // piece_size defines the size of piece data.\n  bytes checksum = 4;\n  // piece_data defines the data that replicate piece to storage provider.\n  bytes piece_data = 5;\n}\n")),(0,n.kt)("h3",{id:"generate-integrity-hash-and-signature"},"Generate integrity hash and signature"),(0,n.kt)("p",null,"After receiving all the replication piece data, calculate the integrity hash and send it to ",(0,n.kt)("a",{parentName:"p",href:"./signer"},"sign"),".\nReturn the integrity hash and signature to the primary SP for sealing object."))}u.isMDXComponent=!0}}]);