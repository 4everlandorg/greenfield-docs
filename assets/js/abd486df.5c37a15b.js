"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[7262],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},94580:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(87462),o=(n(67294),n(3905));const r={title:"Storage Provider Command Line Interface"},i=void 0,s={unversionedId:"api/sp-cli",id:"api/sp-cli",title:"Storage Provider Command Line Interface",description:"There is no set way to create a CLI, but Greenfield Storage Provider typically use the urfave cli library v2.",source:"@site/docs/api/sp-cli.md",sourceDirName:"api",slug:"/api/sp-cli",permalink:"/greenfield-docs/docs/api/sp-cli",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/api/sp-cli.md",tags:[],version:"current",frontMatter:{title:"Storage Provider Command Line Interface"},sidebar:"apiReferenceSidebar",previous:{title:"UpgradedConsensusState",permalink:"/greenfield-docs/docs/greenfield-api/upgraded-consensus-state"},next:{title:"Greenfield SP RESTful APIs",permalink:"/greenfield-docs/docs/api/storage-provider-rest/"}},l={},p=[{value:"Commands",id:"commands",level:2},{value:"Global Options",id:"global-options",level:2},{value:"Config Commands",id:"config-commands",level:3},{value:"Migrate Commands",id:"migrate-commands",level:3},{value:"sp.exit",id:"spexit",level:4},{value:"sp.complete.exit",id:"spcompleteexit",level:4},{value:"sp.complete.swapout",id:"spcompleteswapout",level:4},{value:"Query Commands",id:"query-commands",level:3},{value:"list.modules",id:"listmodules",level:4},{value:"list.errors",id:"listerrors",level:4},{value:"get.object",id:"getobject",level:4},{value:"challenge.piece",id:"challengepiece",level:4},{value:"get.piece.integrity",id:"getpieceintegrity",level:4},{value:"query.bucket.migrate",id:"querybucketmigrate",level:4},{value:"update.quota",id:"updatequota",level:4},{value:"recover.object",id:"recoverobject",level:4},{value:"recover.piece",id:"recoverpiece",level:4}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"There is no set way to create a CLI, but Greenfield Storage Provider typically use the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/urfave/cli"},"urfave cli library v2"),".\nBuilding a CLI with urfave cli entails defining commands, arguments, and flags. Commands understand the actions users wish to take, such as ",(0,o.kt)("inlineCode",{parentName:"p"},"config.dump")," cmd dumps default configuration for editing and ",(0,o.kt)("inlineCode",{parentName:"p"},"config.upload")," uploads the configuration to db, all service gets the configuration from db with ",(0,o.kt)("inlineCode",{parentName:"p"},"--config.remote")," flag.\nUsers also supply ",(0,o.kt)("strong",{parentName:"p"},"Arguments"),", such as the db address that uploading configuration and flags to modify various aspects of the commands, such ",(0,o.kt)("inlineCode",{parentName:"p"},"--server gateway, uploader, downaloader")," starts the gateway, uploader and downloader services in one process, combines the required services arbitrarily."),(0,o.kt)("h2",{id:"commands"},"Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ ./gnfd-sp version\n\nGreenfield Storage Provider\n    __                                                       _     __\n    _____/ /_____  _________ _____ ____     ____  _________ _   __(_)___/ /__  _____\n    / ___/ __/ __ \\/ ___/ __  / __  / _ \\   / __ \\/ ___/ __ \\ | / / / __  / _ \\/ ___/\n    (__  ) /_/ /_/ / /  / /_/ / /_/ /  __/  / /_/ / /  / /_/ / |/ / / /_/ /  __/ /\n    /____/\\__/\\____/_/   \\__,_/\\__, /\\___/  / .___/_/   \\____/|___/_/\\__,_/\\___/_/\n    /____/       /_/\n\nVersion : v1.0.0\nBranch  : master\nCommit  : 7e1f56809c5385bf1ea6f41d318ab1419dcb0f86\nBuild   : go1.20.3 darwin arm64 2023-10-08 10:31\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ ./gnfd-sp --help\n\nNAME:\n   gnfd-sp - the Greenfield Storage Provider command line interface\n\nUSAGE:\n   gnfd-sp [global options] command [command options] [arguments...]\n\nCOMMANDS:\n   help, h  Shows a list of commands or help for one command\n   CONFIG COMMANDS:\n     config.dump  Dump default configuration to the './config.toml' file for editing\n   MIGRATE COMMANDS:\n     sp.exit              Used for sp exits from the Greenfield storage network\n     sp.complete.exit     Only used in debugging scenarios, online use not allowed. Used for sp complete exits from the Greenfield storage network.\n     sp.complete.swapout  Only used in debugging scenarios, online use not allowed. Used for swap out from the Greenfield storage network.\n   MISCELLANEOUS COMMANDS:\n     version, v  Print version information\n   QUERY COMMANDS:\n     list.modules          List the modules in greenfield storage provider\n     list.errors           List the predefine errors in greenfield storage provider\n     query.task            Query running tasks in modules by task sub key\n     get.object            Get object payload data\n     challenge.piece       Challenge piece integrity hash\n     get.piece.integrity   Get piece integrity hash and signature\n     query.bucket.migrate  Query bucket migrate plan and status\n   QUOTA COMMANDS:\n     update.quota  Update the free quota of the SP\n   RECOVERY COMMANDS:\n     recover.object  Generate recover piece data tasks to recover the object data\n     recover.piece   Generate recover piece data task to recover the object piece\n")),(0,o.kt)("h2",{id:"global-options"},"Global Options"),(0,o.kt)("h3",{id:"config-commands"},"Config Commands"),(0,o.kt)("p",null,"Dump default configuration to the ",(0,o.kt)("inlineCode",{parentName:"p"},"./config.toml")," file for editing:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"Example:\n$ ./gnfd-sp config.dump\n")),(0,o.kt)("h3",{id:"migrate-commands"},"Migrate Commands"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"SP exit and bucket migration functions are opened in ",(0,o.kt)("inlineCode",{parentName:"p"},"Testnet")," and not opened in ",(0,o.kt)("inlineCode",{parentName:"p"},"Mainnet"),". Therefore, ",(0,o.kt)("inlineCode",{parentName:"p"},"sp.exit"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"sp.complete.exit")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"sp.complete.swapout")," can be used in ",(0,o.kt)("inlineCode",{parentName:"p"},"Testnet"),". Don't use them in ",(0,o.kt)("inlineCode",{parentName:"p"},"Mainnet"),".")),(0,o.kt)("h4",{id:"spexit"},"sp.exit"),(0,o.kt)("p",null,"Using this command, it will send an transaction to Greenfield blockchain to tell this SP is prepared to exit from Greenfield storage network."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"USAGE:\n   gnfd-sp sp.exit [command options] [arguments...]\n\nExample:\n$ ./gnfd-sp sp.exit --operatorAddress ${operator_address}\n")),(0,o.kt)("h4",{id:"spcompleteexit"},"sp.complete.exit"),(0,o.kt)("p",null,"Using this command, it will send an transaction to Greenfield blockchain to tell this SP is prepared to complete exit from Greenfield storage network."),(0,o.kt)("p",null,"Only used in debugging scenarios, online use not allowed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"USAGE:\n   gnfd-sp sp.complete.exit [command options] [arguments...]\n\nExample:\n$ ./gnfd-sp sp.complete.exit --operatorAddress {operator_address}\n")),(0,o.kt)("h4",{id:"spcompleteswapout"},"sp.complete.swapout"),(0,o.kt)("p",null,"Using this command, it will send an transaction to Greenfield blockchain to tell this SP is prepared to swap out from Greenfield storage network."),(0,o.kt)("p",null,"Only used in debugging scenarios, online use not allowed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"USAGE:\n   gnfd-sp sp.complete.swapout [command options] [arguments...]\n\n$ ./gnfd-sp sp.complete.swapout --operatorAddress {openrator_address} --familyID 2 --gvgIDList '1,2,3'\n")),(0,o.kt)("h3",{id:"query-commands"},"Query Commands"),(0,o.kt)("h4",{id:"listmodules"},"list.modules"),(0,o.kt)("p",null,"List the modules in greenfield storage provider."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"USAGE:\n   gnfd-sp list.modules [command options] [arguments...]\n\nExample:\n$ ./gnfd-sp list.modules\n\n# Output\napprover             Handles the ask crate bucket/object and replicates piece approval request.\nauthenticator        Checks authentication.\nblocksyncer          Synchronize data on the chain to SP\ndownloader           Downloads object and gets challenge info and statistical read traffic from the backend.\ngateway              Receives the user request and routes to the responding service.\nmanager              Manages SPs and schedules tasks.\nmetadata             Retrieves sp metadata and info.\np2p                  Communicates between SPs on p2p protocol.\nreceiver             Receives data pieces of an object from other storage provider and store.\nsigner               Signs the transaction and broadcasts to chain.\ntaskexecutor         Executes background tasks.\nuploader             Uploads object payload to primary SP.\n")),(0,o.kt)("h4",{id:"listerrors"},"list.errors"),(0,o.kt)("p",null,"List the predefine errors in Greenfield storage provider."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'USAGE:\n   gnfd-sp list.errors [command options] [arguments...]\n\nExample:\n$ ./gnfd-sp list.errors\n\n# Output\ncode_space:"approver" http_status_code:400 inner_code:10001 description:"OoooH.... request lost"\ncode_space:"approver" http_status_code:406 inner_code:10002 description:"account buckets exceed the limit"\ncode_space:"authenticator" http_status_code:400 inner_code:20001 description:"unsupported auth op type"\ncode_space:"authenticator" http_status_code:400 inner_code:20002 description:"mismatched primary sp"\n......\n')),(0,o.kt)("h4",{id:"getobject"},"get.object"),(0,o.kt)("p",null,"The get.object command send rpc request to downloader server to get object payload data."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"USAGE:\n   gnfd-sp get.object [command options] [arguments...]\n\nExample:\n$ ./gnfd-sp get.object -i 123 --config ./config.toml\n")),(0,o.kt)("h4",{id:"challengepiece"},"challenge.piece"),(0,o.kt)("p",null,"The challenge.piece command send rpc request to downloader get integrity meta and check the piece checksums."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"USAGE:\n   gnfd-sp challenge.piece [command options] [arguments...]\n\nExample:\n$ ./gnfd-sp challenge.piece -i 123 -r 1 -s 2 --config ./config.toml\n")),(0,o.kt)("h4",{id:"getpieceintegrity"},"get.piece.integrity"),(0,o.kt)("p",null,"The get.piece.integrity command send rpc request to spdb get integrity hash and signature."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"USAGE:\n   gnfd-sp get.piece.integrity [command options] [arguments...]\n\nExample:\n$ ./gnfd-sp get.piece.integrity -i 10 --config ./config.toml\n")),(0,o.kt)("h4",{id:"querybucketmigrate"},"query.bucket.migrate"),(0,o.kt)("p",null,"The query.bucket.migrate command send rpc request to manager get plan and status."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"USAGE:\n   gnfd-sp query.bucket.migrate [command options] [arguments...]\n\nExample:\n$ ./gnfd-sp query.bucket.migrate --config ./config.toml\n")),(0,o.kt)("h4",{id:"updatequota"},"update.quota"),(0,o.kt)("p",null,"The update.quota command is used to update the free quota of the SP on greenfield chain, it will send a txn to the chain to finish the updating."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"USAGE:\n   gnfd-sp update.quota [command options] [arguments...]\n\nExample:\n$ ./gnfd-sp update.quota --quota 100000 --config ./config.toml\n")),(0,o.kt)("h4",{id:"recoverobject"},"recover.object"),(0,o.kt)("p",null,"The recover.object command is used to recover the object  data on the primarySP or the secondary SP"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"USAGE:\n   gnfd-sp recover.object [command options] [arguments...]\n\nExample:\n$ ./gnfd-sp recover.object -b testbucket -o testobject --config ./config.toml\n")),(0,o.kt)("h4",{id:"recoverpiece"},"recover.piece"),(0,o.kt)("p",null,"The recover.piece command is used to recover the object piece data on the primarySP or the secondary SP."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"USAGE:\n   gnfd-sp recover.piece [command options] [arguments...]\n\nExample:\n$ ./gnfd-sp recover.object -b testbucket -o testobject -s 1 --config ./config.toml\n")))}u.isMDXComponent=!0}}]);