"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[5267],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>p});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,m=a(e,["components","mdxType","originalType","parentName"]),u=s(r),d=i,p=u["".concat(l,".").concat(d)]||u[d]||f[d]||o;return r?n.createElement(p,c(c({ref:t},m),{},{components:r})):n.createElement(p,c({ref:t},m))}));function p(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,c=new Array(o);c[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[u]="string"==typeof e?e:i,c[1]=a;for(var s=2;s<o;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},94163:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>f,frontMatter:()=>o,metadata:()=>a,toc:()=>s});var n=r(87462),i=(r(67294),r(3905));const o={},c="Common Abstract Interface",a={unversionedId:"guide/storage-provider/modules/common/lifecycle_modular",id:"guide/storage-provider/modules/common/lifecycle_modular",title:"Common Abstract Interface",description:"Every service implements Lifecycle and Modular interface. Therefore, we can do a unified lifecycle and resource management through GfSp framework.",source:"@site/docs/guide/storage-provider/modules/common/lifecycle_modular.md",sourceDirName:"guide/storage-provider/modules/common",slug:"/guide/storage-provider/modules/common/lifecycle_modular",permalink:"/greenfield-docs/docs/guide/storage-provider/modules/common/lifecycle_modular",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/guide/storage-provider/modules/common/lifecycle_modular.md",tags:[],version:"current",frontMatter:{}},l={},s=[{value:"Lifecycle Interface",id:"lifecycle-interface",level:2},{value:"Modular Interface",id:"modular-interface",level:2},{value:"Limit",id:"limit",level:2}],m={toc:s},u="wrapper";function f(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"common-abstract-interface"},"Common Abstract Interface"),(0,i.kt)("p",null,"Every service implements Lifecycle and Modular interface. Therefore, we can do a unified lifecycle and resource management through GfSp framework."),(0,i.kt)("h2",{id:"lifecycle-interface"},"Lifecycle Interface"),(0,i.kt)("p",null,"Lifecycle interface manages the lifecycle of a service and tracks its state changes. It also listens for signals from the process to ensure a graceful shutdown."),(0,i.kt)("p",null,"Service is an interface for Lifecycle to manage. The component that plans to use Lifecycle needs to implement the following interface:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// Service provides abstract methods to control the lifecycle of a service\n// Every service must implement Service interface.\ntype Service interface {\n    // Name describe service name\n    Name() string\n    // Start a service, this method should be used in non-block form\n    Start(ctx context.Context) error\n    // Stop a service, this method should be used in non-block form\n    Stop(ctx context.Context) error\n}\n\n// Lifecycle is an interface to describe how service is managed.\n// The Lifecycle tracks the Service lifecycle, listens for signals from\n// the process to ensure a graceful shutdown.\n//\n// All managed services must firstly call RegisterServices to register with Lifecycle.\ntype Lifecycle interface {\n    // RegisterServices registers service to ServiceLifecycle for managing.\n    RegisterServices(modular ...Service)\n    // StartServices starts all registered services by calling Service.Start method.\n    StartServices(ctx context.Context) Lifecycle\n    // StopServices stops all registered services by calling Service.Stop method.\n    StopServices(ctx context.Context)\n    // Signals listens the system signals for gracefully stop the registered services.\n    Signals(sigs ...os.Signal) Lifecycle\n    // Wait waits the signal for stopping the ServiceLifecycle, before stopping\n    // the ServiceLifecycle will call StopServices stops all registered services.\n    Wait(ctx context.Context)\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/greenfield-storage-provider/blob/master/core/lifecycle/lifecycle.go"},"Lifecycle Code Snippet"))),(0,i.kt)("h2",{id:"modular-interface"},"Modular Interface"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// Modular is a common interface for submodules that are scheduled by the GfSp framework.\n// It inherits lifecycle.Service interface, which is used to manage lifecycle of services. Additionally, Modular is managed\n// by ResourceManager, which allows the GfSp framework to reserve and release resources from the Modular resource pool.\ntype Modular interface {\n    lifecycle.Service\n    // ReserveResource reserves the resources from Modular resources pool.\n    ReserveResource(ctx context.Context, state *rcmgr.ScopeStat) (rcmgr.ResourceScopeSpan, error)\n    // ReleaseResource releases the resources to Modular resources pool.\n    ReleaseResource(ctx context.Context, scope rcmgr.ResourceScopeSpan)\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/bnb-chain/greenfield-storage-provider/blob/master/core/module/modular.go"},"Modular Code Snippet"))),(0,i.kt)("h2",{id:"limit"},"Limit"),(0,i.kt)("p",null,"Limit is an interface that that specifies basic resource limits."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type Limit interface {\n    // GetMemoryLimit returns the (current) memory limit.\n    GetMemoryLimit() int64\n    // GetFDLimit returns the file descriptor limit.\n    GetFDLimit() int\n    // GetConnLimit returns the connection limit, for inbound or outbound connections.\n    GetConnLimit(Direction) int\n    // GetConnTotalLimit returns the total connection limit.\n    GetConnTotalLimit() int\n    // GetTaskLimit returns the task limit, for high, medium and low priority tasks.\n    GetTaskLimit(ReserveTaskPriority) int\n    // GetTaskTotalLimit returns the total task limit.\n    GetTaskTotalLimit() int\n    ScopeStat() *ScopeStat\n    // NotLess returns an indicator whether cover the param limit fields.\n    NotLess(Limit) bool\n    // Add params limits fields value to self.\n    Add(Limit)\n    // Sub params limits fields value to self.\n    Sub(Limit) bool\n    // Equal returns an indicator whether equal the param limit.\n    Equal(Limit) bool\n    // String returns the Limit state string.\n    String() string\n}\n")))}f.isMDXComponent=!0}}]);