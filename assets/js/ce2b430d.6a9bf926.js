"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[7042],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},85162:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(67294),a=r(86010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(l.tabItem,o),hidden:r},t)}},65488:(e,t,r)=>{r.d(t,{Z:()=>p});var n=r(87462),a=r(67294),l=r(86010),o=r(72389),i=r(67392),s=r(7094),c=r(12466);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function d(e){const{lazy:t,block:r,defaultValue:o,values:d,groupId:p,className:m}=e,f=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=d??f.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),h=(0,i.l)(b,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===o?o:o??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==g&&!b.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:v}=(0,s.U)(),[y,N]=(0,a.useState)(g),T=[],{blockElementScrollPositionUntilNextRender:w}=(0,c.o5)();if(null!=p){const e=k[p];null!=e&&e!==y&&b.some((t=>t.value===e))&&N(e)}const C=e=>{const t=e.currentTarget,r=T.indexOf(t),n=b[r].value;n!==y&&(w(t),N(n),null!=p&&v(p,String(n)))},O=e=>{let t=null;switch(e.key){case"Enter":C(e);break;case"ArrowRight":{const r=T.indexOf(e.currentTarget)+1;t=T[r]??T[0];break}case"ArrowLeft":{const r=T.indexOf(e.currentTarget)-1;t=T[r]??T[T.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,l.Z)("tabs-container",u.tabList)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":r},m)},b.map((e=>{let{value:t,label:r,attributes:o}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>T.push(e),onKeyDown:O,onClick:C},o,{className:(0,l.Z)("tabs__item",u.tabItem,o?.className,{"tabs__item--active":y===t})}),r??t)}))),t?(0,a.cloneElement)(f.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function p(e){const t=(0,o.Z)();return a.createElement(d,(0,n.Z)({key:String(t)},e))}},85148:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var n=r(87462),a=(r(67294),r(3905)),l=r(65488),o=r(85162);const i={title:"Cross Chain Transfer",order:5},s="Cross Chain Transfer",c={unversionedId:"api/blockchain-cli/bridge",id:"api/blockchain-cli/bridge",title:"Cross Chain Transfer",description:"Abstract",source:"@site/docs/api/blockchain-cli/bridge.md",sourceDirName:"api/blockchain-cli",slug:"/api/blockchain-cli/bridge",permalink:"/greenfield-docs/docs/api/blockchain-cli/bridge",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/api/blockchain-cli/bridge.md",tags:[],version:"current",frontMatter:{title:"Cross Chain Transfer",order:5},sidebar:"apiReferenceSidebar",previous:{title:"Storage Provider",permalink:"/greenfield-docs/docs/api/blockchain-cli/storage-provider"},next:{title:"On-chain Governance",permalink:"/greenfield-docs/docs/api/blockchain-cli/governance"}},u={},d=[{value:"Abstract",id:"abstract",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Query Relayer Fee",id:"query-relayer-fee",level:3},{value:"Transfer from Greenfield to BSC",id:"transfer-from-greenfield-to-bsc",level:3},{value:"Detailed CLI",id:"detailed-cli",level:2},{value:"Query",id:"query",level:3},{value:"params",id:"params",level:4},{value:"Transactions",id:"transactions",level:3},{value:"transfer-out",id:"transfer-out",level:4}],p={toc:d},m="wrapper";function f(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cross-chain-transfer"},"Cross Chain Transfer"),(0,a.kt)("h2",{id:"abstract"},"Abstract"),(0,a.kt)("p",null,"The bridge module is responsible for handling the BNB transfers between Greenfield and BSC."),(0,a.kt)("p",null,"Users can transfer BNB to BSC via gnfd command, and query the relayer fee for the cross-chain transfers."),(0,a.kt)("h2",{id:"quick-start"},"Quick Start"),(0,a.kt)("h3",{id:"query-relayer-fee"},"Query Relayer Fee"),(0,a.kt)("p",null,"For cross-chain transaction, some amount of fee will be paid to cross-chain relayers."),(0,a.kt)("p",null,"To query the fees, please use the following command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd q bridge params --node ${node} \n")),(0,a.kt)("p",null,"${node} is the rpc address of a Greenfield node."),(0,a.kt)(l.Z,{defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"mainnet",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'node = "https://greenfield-chain.bnbchain.org:443"\n'))),(0,a.kt)(o.Z,{value:"testnet",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'node = "https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org:443"\n')))),(0,a.kt)("h3",{id:"transfer-from-greenfield-to-bsc"},"Transfer from Greenfield to BSC"),(0,a.kt)("p",null,"To transfer funds from Greenfield to BSC, you can use the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd tx bridge transfer-out ${key} ${receiver} ${coins} --home ~/.gnfd --node ${node}  -y\n")),(0,a.kt)("p",null,"${key} is the name of local key."),(0,a.kt)("p",null,"${coins} defines the coins you want to transfer, for example, ",(0,a.kt)("inlineCode",{parentName:"p"},"500000000000000000000BNB"),"."),(0,a.kt)("p",null,"${receiver} defines the address on BSC, which will receive the funds."),(0,a.kt)("h2",{id:"detailed-cli"},"Detailed CLI"),(0,a.kt)("p",null,"A user can query and interact with the ",(0,a.kt)("inlineCode",{parentName:"p"},"bridge")," module using the CLI."),(0,a.kt)("h3",{id:"query"},"Query"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"query")," commands allow users to query the params of the ",(0,a.kt)("inlineCode",{parentName:"p"},"bridge")," module."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query bridge --help\n")),(0,a.kt)("h4",{id:"params"},"params"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"params")," command allows users to query the params of the ",(0,a.kt)("inlineCode",{parentName:"p"},"bridge")," module."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query bridge params [flags]\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query bridge params --node https://greenfield-chain.bnbchain.org:443\n")),(0,a.kt)("p",null,"Example Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},'params:\n  transfer_out_ack_relayer_fee: "0"\n  transfer_out_relayer_fee: "1"\n')),(0,a.kt)("h3",{id:"transactions"},"Transactions"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"tx")," commands allow users to interact with the ",(0,a.kt)("inlineCode",{parentName:"p"},"bridge")," module."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx bridge --help\n")),(0,a.kt)("h4",{id:"transfer-out"},"transfer-out"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"transfer-out")," command allows users to send funds between accounts from Greenfield to BSC."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx bridge transfer-out [from_key_or_address] [to_address] [amount] [flags]\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx bridge transfer-out alice 0x32Ff14Fa1547314b95991976DB432F9Aa648A423 500000000000000000000BNB --home ~/.gnfd --node https://greenfield-chain.bnbchain.org:443  -y\n")))}f.isMDXComponent=!0}}]);