"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[323],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,k=u["".concat(p,".").concat(m)]||u[m]||c[m]||l;return n?r.createElement(k,o(o({ref:t},d),{},{components:n})):r.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},56532:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const l={title:"Get Nonce"},o="GetNonce",i={unversionedId:"api/storage-provider-rest/get_nonce",id:"api/storage-provider-rest/get_nonce",title:"Get Nonce",description:"RESTful API Description",source:"@site/docs/api/storage-provider-rest/get_nonce.md",sourceDirName:"api/storage-provider-rest",slug:"/api/storage-provider-rest/get_nonce",permalink:"/greenfield-docs/docs/api/storage-provider-rest/get_nonce",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/api/storage-provider-rest/get_nonce.md",tags:[],version:"current",frontMatter:{title:"Get Nonce"},sidebar:"apiReferenceSidebar",previous:{title:"List Objects By Bucket",permalink:"/greenfield-docs/docs/api/storage-provider-rest/list_objects_by_bucket"},next:{title:"Update User Account Key",permalink:"/greenfield-docs/docs/api/storage-provider-rest/update_key"}},p={},s=[{value:"RESTful API Description",id:"restful-api-description",level:2},{value:"HTTP Request Format",id:"http-request-format",level:2},{value:"HTTP Request Header",id:"http-request-header",level:2},{value:"HTTP Request Parameter",id:"http-request-parameter",level:2},{value:"Path Parameter",id:"path-parameter",level:3},{value:"Query Parameter",id:"query-parameter",level:3},{value:"Request Body",id:"request-body",level:3},{value:"Request Syntax",id:"request-syntax",level:2},{value:"Response Header",id:"response-header",level:3},{value:"HTTP Response Parameter",id:"http-response-parameter",level:2},{value:"Response Body",id:"response-body",level:3},{value:"Response Syntax",id:"response-syntax",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1: Get nonce for a new combination of user address and app domain",id:"example-1-get-nonce-for-a-new-combination-of-user-address-and-app-domain",level:3},{value:"request",id:"request",level:4},{value:"response",id:"response",level:4},{value:"Example 2: Get nonce for an existing combination of user address and app domain",id:"example-2-get-nonce-for-an-existing-combination-of-user-address-and-app-domain",level:3},{value:"response",id:"response-1",level:4}],d={toc:s},u="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getnonce"},"GetNonce"),(0,a.kt)("h2",{id:"restful-api-description"},"RESTful API Description"),(0,a.kt)("p",null,"This API is used to query the current user account key record."),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/greenfield-docs/docs/guide/storage-provider/modules/authenticator"},"off-chain authentication specification")),(0,a.kt)("h2",{id:"http-request-format"},"HTTP Request Format"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Host"),(0,a.kt)("td",{parentName:"tr",align:null},"gnfd-testnet-sp-*.bnbchain.org")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Path"),(0,a.kt)("td",{parentName:"tr",align:null},"/auth/request_nonce")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Method"),(0,a.kt)("td",{parentName:"tr",align:null},"GET")))),(0,a.kt)("h2",{id:"http-request-header"},"HTTP Request Header"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"ParameterName"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"X-Gnfd-User-Address"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"yes"),(0,a.kt)("td",{parentName:"tr",align:null},"user address for the account key")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"X-Gnfd-App-Domain"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"yes"),(0,a.kt)("td",{parentName:"tr",align:null},"app domain for the account key")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Authorization"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"no"),(0,a.kt)("td",{parentName:"tr",align:null},"no need to pass in any authorization info")))),(0,a.kt)("h2",{id:"http-request-parameter"},"HTTP Request Parameter"),(0,a.kt)("h3",{id:"path-parameter"},"Path Parameter"),(0,a.kt)("p",null,"The request does not have a path parameter."),(0,a.kt)("h3",{id:"query-parameter"},"Query Parameter"),(0,a.kt)("p",null,"The request does not have a query parameter."),(0,a.kt)("h3",{id:"request-body"},"Request Body"),(0,a.kt)("p",null,"The request does not have a request body."),(0,a.kt)("h2",{id:"request-syntax"},"Request Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-HTTP"},"GET /auth/request_nonce HTTP/1.1\nHost: gnfd-testnet-sp-*.bnbchain.org\nX-Gnfd-User-Address: UserAddress\nX-Gnfd-App-Domain: AppDomain\n")),(0,a.kt)("h3",{id:"response-header"},"Response Header"),(0,a.kt)("p",null,"The response returns the following HTTP headers."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"ParameterName"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"value is ",(0,a.kt)("inlineCode",{parentName:"td"},"application/xml"))))),(0,a.kt)("h2",{id:"http-response-parameter"},"HTTP Response Parameter"),(0,a.kt)("h3",{id:"response-body"},"Response Body"),(0,a.kt)("p",null,"If the request is successful, the service sends back an HTTP 200 response."),(0,a.kt)("p",null,"The following data is returned in XML format by the service."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"ParameterName"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"current_nonce"),(0,a.kt)("td",{parentName:"tr",align:null},"integer"),(0,a.kt)("td",{parentName:"tr",align:null},"current nonce for given account address and app domain")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"next_nonce"),(0,a.kt)("td",{parentName:"tr",align:null},"integer"),(0,a.kt)("td",{parentName:"tr",align:null},"next nonce for given account address and app domain, which will be used for new account key registration")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"current_public_key"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"current public key for given account address and app domain")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"expiry_date"),(0,a.kt)("td",{parentName:"tr",align:null},"integer"),(0,a.kt)("td",{parentName:"tr",align:null},"expire date for the current public key")))),(0,a.kt)("h2",{id:"response-syntax"},"Response Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-HTTP"},"HTTP/1.1 200\nContent-Type: application/xml\n\nXML Body\n")),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("h3",{id:"example-1-get-nonce-for-a-new-combination-of-user-address-and-app-domain"},"Example 1: Get nonce for a new combination of user address and app domain"),(0,a.kt)("h4",{id:"request"},"request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-HTTP"},"GET /auth/request_nonce HTTP/1.1\nHost: gnfd-testnet-sp-4.bnbchain.org\nX-Gnfd-User-Address: 0x3d0a49B091ABF8940AD742c0139416cEB30CdEe0\nX-Gnfd-App-Domain: https://greenfield.dapp.io\n")),(0,a.kt)("h4",{id:"response"},"response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<RequestNonceResp>\n<CurrentNonce>0</CurrentNonce>\n<NextNonce>1</NextNonce>\n<CurrentPublicKey></CurrentPublicKey>\n<ExpiryDate>1693204673610</ExpiryDate>\n</RequestNonceResp>\n")),(0,a.kt)("h3",{id:"example-2-get-nonce-for-an-existing-combination-of-user-address-and-app-domain"},"Example 2: Get nonce for an existing combination of user address and app domain"),(0,a.kt)("h4",{id:"response-1"},"response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<RequestNonceResp>\n<CurrentNonce>7</CurrentNonce>\n<NextNonce>8</NextNonce>\n<CurrentPublicKey>ba149b8e932b38cf4098bad7f5189e23ad59672d5e6cb141c515e0e34ea9652e</CurrentPublicKey>\n<ExpiryDate>1683885489612</ExpiryDate>\n</RequestNonceResp>\n")))}c.isMDXComponent=!0}}]);