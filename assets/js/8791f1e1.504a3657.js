"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[7864],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>m});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},d=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},g=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(t),g=a,m=p["".concat(c,".").concat(g)]||p[g]||u[g]||o;return t?n.createElement(m,i(i({ref:r},d),{},{components:t})):n.createElement(m,i({ref:r},d))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=g;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},62473:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=t(87462),a=(t(67294),t(3905));const o={title:"Storage Provider",order:4},i="Storage Provider",l={unversionedId:"api/blockchain-cli/storage-provider",id:"api/blockchain-cli/storage-provider",title:"Storage Provider",description:"The SP module is responsible for managing and maintaining all storage providers in the Greenfield network. It provides basic functions such as joining, depositing, editing, and etc.",source:"@site/docs/api/blockchain-cli/storage-provider.md",sourceDirName:"api/blockchain-cli",slug:"/api/blockchain-cli/storage-provider",permalink:"/greenfield-docs/docs/api/blockchain-cli/storage-provider",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/api/blockchain-cli/storage-provider.md",tags:[],version:"current",frontMatter:{title:"Storage Provider",order:4},sidebar:"apiReferenceSidebar",previous:{title:"Storage Object",permalink:"/greenfield-docs/docs/api/blockchain-cli/storage"},next:{title:"Cross Chain Transfer",permalink:"/greenfield-docs/docs/api/blockchain-cli/bridge"}},c={},s=[{value:"QuickStart",id:"quickstart",level:2},{value:"Query",id:"query",level:2}],d={toc:s},p="wrapper";function u(e){let{components:r,...t}=e;return(0,a.kt)(p,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"storage-provider"},"Storage Provider"),(0,a.kt)("p",null,"The SP module is responsible for managing and maintaining all storage providers in the Greenfield network. It provides basic functions such as joining, depositing, editing, and etc."),(0,a.kt)("h2",{id:"quickstart"},"QuickStart"),(0,a.kt)("p",null,"To begin, start a local cluster with m validator and n storage provider"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ bash ./deployment/localup/localup.sh all 3 7\n")),(0,a.kt)("p",null,"The above command will create a local Greenfield chain network, which initializes three validators and seven storage providers."),(0,a.kt)("h2",{id:"query"},"Query"),(0,a.kt)("p",null,"The CLI ",(0,a.kt)("inlineCode",{parentName:"p"},"query")," commands allow users to query ",(0,a.kt)("inlineCode",{parentName:"p"},"sp")," state. You can use it to query the status of the storage provider, where params include minimum bond, bond denom, etc.; storage-provider can query the SP at a specific address; storage-providers can query all SPs."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ ./build/bin/gnfd query sp --help\nQuerying commands for the sp module\n\nUsage:\n  gnfd query sp [flags]\n  gnfd query sp [command]\n\nAvailable Commands:\n  params            Shows the parameters of the module\n  storage-provider  Query storage-provider with specify address\n  storage-providers Query StorageProviders\n\n")))}u.isMDXComponent=!0}}]);