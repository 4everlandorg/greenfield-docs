"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[7042],{65488:(e,a,t)=>{t.d(a,{Z:()=>p});var n=t(87462),r=t(67294),l=t(86010),s=t(72389),o=t(67392),i=t(7094),d=t(12466);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function c(e){const{lazy:a,block:t,defaultValue:s,values:c,groupId:p,className:m}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=c??f.map((e=>{let{props:{value:a,label:t,attributes:n}}=e;return{value:a,label:t,attributes:n}})),b=(0,o.l)(h,((e,a)=>e.value===a.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===s?s:s??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==k&&!h.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:v}=(0,i.U)(),[y,N]=(0,r.useState)(k),C=[],{blockElementScrollPositionUntilNextRender:T}=(0,d.o5)();if(null!=p){const e=g[p];null!=e&&e!==y&&h.some((a=>a.value===e))&&N(e)}const w=e=>{const a=e.currentTarget,t=C.indexOf(a),n=h[t].value;n!==y&&(T(a),N(n),null!=p&&v(p,String(n)))},x=e=>{let a=null;switch(e.key){case"Enter":w(e);break;case"ArrowRight":{const t=C.indexOf(e.currentTarget)+1;a=C[t]??C[0];break}case"ArrowLeft":{const t=C.indexOf(e.currentTarget)-1;a=C[t]??C[C.length-1];break}}a?.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":t},m)},h.map((e=>{let{value:a,label:t,attributes:s}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:y===a?0:-1,"aria-selected":y===a,key:a,ref:e=>C.push(e),onKeyDown:x,onClick:w},s,{className:(0,l.Z)("tabs__item",u.tabItem,s?.className,{"tabs__item--active":y===a})}),t??a)}))),a?(0,r.cloneElement)(f.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==y})))))}function p(e){const a=(0,s.Z)();return r.createElement(c,(0,n.Z)({key:String(a)},e))}},85148:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var n=t(87462),r=(t(67294),t(3905)),l=t(65488),s=t(85162);const o={title:"Cross Chain Transfer",order:5},i="Cross Chain Transfer",d={unversionedId:"api/blockchain-cli/bridge",id:"api/blockchain-cli/bridge",title:"Cross Chain Transfer",description:"Abstract",source:"@site/docs/api/blockchain-cli/bridge.md",sourceDirName:"api/blockchain-cli",slug:"/api/blockchain-cli/bridge",permalink:"/greenfield-docs/docs/api/blockchain-cli/bridge",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/api/blockchain-cli/bridge.md",tags:[],version:"current",frontMatter:{title:"Cross Chain Transfer",order:5},sidebar:"apiReferenceSidebar",previous:{title:"Storage Provider",permalink:"/greenfield-docs/docs/api/blockchain-cli/storage-provider"},next:{title:"On-chain Governance",permalink:"/greenfield-docs/docs/api/blockchain-cli/governance"}},u={},c=[{value:"Abstract",id:"abstract",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Query Relayer Fee",id:"query-relayer-fee",level:3},{value:"Transfer from Greenfield to BSC",id:"transfer-from-greenfield-to-bsc",level:3},{value:"Detailed CLI",id:"detailed-cli",level:2},{value:"Query",id:"query",level:3},{value:"params",id:"params",level:4},{value:"Transactions",id:"transactions",level:3},{value:"transfer-out",id:"transfer-out",level:4}],p={toc:c},m="wrapper";function f(e){let{components:a,...t}=e;return(0,r.kt)(m,(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cross-chain-transfer"},"Cross Chain Transfer"),(0,r.kt)("h2",{id:"abstract"},"Abstract"),(0,r.kt)("p",null,"The bridge module is responsible for handling the BNB transfers between Greenfield and BSC."),(0,r.kt)("p",null,"Users can transfer BNB to BSC via gnfd command, and query the relayer fee for the cross-chain transfers."),(0,r.kt)("h2",{id:"quick-start"},"Quick Start"),(0,r.kt)("h3",{id:"query-relayer-fee"},"Query Relayer Fee"),(0,r.kt)("p",null,"For cross-chain transaction, some amount of fee will be paid to cross-chain relayers."),(0,r.kt)("p",null,"To query the fees, please use the following command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd q bridge params --node ${node} \n")),(0,r.kt)("p",null,"${node} is the rpc address of a Greenfield node."),(0,r.kt)(l.Z,{defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"mainnet",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'node = "https://greenfield-chain.bnbchain.org:443"\n'))),(0,r.kt)(s.Z,{value:"testnet",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'node = "https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org:443"\n')))),(0,r.kt)("h3",{id:"transfer-from-greenfield-to-bsc"},"Transfer from Greenfield to BSC"),(0,r.kt)("p",null,"To transfer funds from Greenfield to BSC, you can use the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd tx bridge transfer-out ${key} ${receiver} ${coins} --home ~/.gnfd --node ${node}  -y\n")),(0,r.kt)("p",null,"${key} is the name of local key."),(0,r.kt)("p",null,"${coins} defines the coins you want to transfer, for example, ",(0,r.kt)("inlineCode",{parentName:"p"},"500000000000000000000BNB"),"."),(0,r.kt)("p",null,"${receiver} defines the address on BSC, which will receive the funds."),(0,r.kt)("h2",{id:"detailed-cli"},"Detailed CLI"),(0,r.kt)("p",null,"A user can query and interact with the ",(0,r.kt)("inlineCode",{parentName:"p"},"bridge")," module using the CLI."),(0,r.kt)("h3",{id:"query"},"Query"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," commands allow users to query the params of the ",(0,r.kt)("inlineCode",{parentName:"p"},"bridge")," module."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query bridge --help\n")),(0,r.kt)("h4",{id:"params"},"params"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"params")," command allows users to query the params of the ",(0,r.kt)("inlineCode",{parentName:"p"},"bridge")," module."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query bridge params [flags]\n")),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query bridge params --node https://greenfield-chain.bnbchain.org:443\n")),(0,r.kt)("p",null,"Example Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},'params:\n  transfer_out_ack_relayer_fee: "0"\n  transfer_out_relayer_fee: "1"\n')),(0,r.kt)("h3",{id:"transactions"},"Transactions"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"tx")," commands allow users to interact with the ",(0,r.kt)("inlineCode",{parentName:"p"},"bridge")," module."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx bridge --help\n")),(0,r.kt)("h4",{id:"transfer-out"},"transfer-out"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"transfer-out")," command allows users to send funds between accounts from Greenfield to BSC."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx bridge transfer-out [from_key_or_address] [to_address] [amount] [flags]\n")),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx bridge transfer-out alice 0x32Ff14Fa1547314b95991976DB432F9Aa648A423 500000000000000000000BNB --home ~/.gnfd --node https://greenfield-chain.bnbchain.org:443  -y\n")))}f.isMDXComponent=!0}}]);