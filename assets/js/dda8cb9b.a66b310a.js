"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[5999],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>y});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var u=n.createContext({}),s=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},i=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,u=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=s(a),i=l,y=p["".concat(u,".").concat(i)]||p[i]||m[i]||r;return a?n.createElement(y,c(c({ref:t},d),{},{components:a})):n.createElement(y,c({ref:t},d))}));function y(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,c=new Array(r);c[0]=i;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[p]="string"==typeof e?e:l,c[1]=o;for(var s=2;s<r;s++)c[s]=a[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,a)}i.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(67294),l=a(86010);const r={tabItem:"tabItem_Ymn6"};function c(e){let{children:t,hidden:a,className:c}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(r.tabItem,c),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(87462),l=a(67294),r=a(86010),c=a(72389),o=a(67392),u=a(7094),s=a(12466);const d={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(e){const{lazy:t,block:a,defaultValue:c,values:p,groupId:m,className:i}=e,y=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=p??y.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),h=(0,o.l)(f,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===c?c:c??y.find((e=>e.props.default))?.props.value??y[0].props.value;if(null!==b&&!f.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:g}=(0,u.U)(),[w,v]=(0,l.useState)(b),N=[],{blockElementScrollPositionUntilNextRender:C}=(0,s.o5)();if(null!=m){const e=k[m];null!=e&&e!==w&&f.some((t=>t.value===e))&&v(e)}const _=e=>{const t=e.currentTarget,a=N.indexOf(t),n=f[a].value;n!==w&&(C(t),v(n),null!=m&&g(m,String(n)))},A=e=>{let t=null;switch(e.key){case"Enter":_(e);break;case"ArrowRight":{const a=N.indexOf(e.currentTarget)+1;t=N[a]??N[0];break}case"ArrowLeft":{const a=N.indexOf(e.currentTarget)-1;t=N[a]??N[N.length-1];break}}t?.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",d.tabList)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},i)},f.map((e=>{let{value:t,label:a,attributes:c}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>N.push(e),onKeyDown:A,onClick:_},c,{className:(0,r.Z)("tabs__item",d.tabItem,c?.className,{"tabs__item--active":w===t})}),a??t)}))),t?(0,l.cloneElement)(y.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},y.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,c.Z)();return l.createElement(p,(0,n.Z)({key:String(t)},e))}},15605:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>y,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=a(87462),l=(a(67294),a(3905)),r=a(65488),c=a(85162);const o={title:"Payment",Order:6},u="Payment",s={unversionedId:"api/blockchain-cli/payment",id:"api/blockchain-cli/payment",title:"Payment",description:"Abstract",source:"@site/docs/api/blockchain-cli/payment.md",sourceDirName:"api/blockchain-cli",slug:"/api/blockchain-cli/payment",permalink:"/greenfield-docs/docs/api/blockchain-cli/payment",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/api/blockchain-cli/payment.md",tags:[],version:"current",frontMatter:{title:"Payment",Order:6},sidebar:"apiReferenceSidebar",previous:{title:"On-chain Governance",permalink:"/greenfield-docs/docs/api/blockchain-cli/governance"},next:{title:"Validator Staking",permalink:"/greenfield-docs/docs/api/blockchain-cli/validator-staking"}},d={},p=[{value:"Abstract",id:"abstract",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Create Payment Account",id:"create-payment-account",level:3},{value:"Query Payment Account",id:"query-payment-account",level:3},{value:"Deposit to Payment Account",id:"deposit-to-payment-account",level:3},{value:"Withdraw from Payment Account",id:"withdraw-from-payment-account",level:3},{value:"Disable Refundable",id:"disable-refundable",level:3},{value:"Detailed CLI",id:"detailed-cli",level:2},{value:"Query",id:"query",level:3},{value:"params",id:"params",level:4},{value:"show-payment-account",id:"show-payment-account",level:4},{value:"show-payment-account-count",id:"show-payment-account-count",level:4},{value:"show-stream-record",id:"show-stream-record",level:4},{value:"get-payment-accounts-by-owner",id:"get-payment-accounts-by-owner",level:4},{value:"dynamic-balance",id:"dynamic-balance",level:4},{value:"Transactions",id:"transactions",level:3},{value:"create-payment-account",id:"create-payment-account-1",level:4},{value:"deposit",id:"deposit",level:4},{value:"withdraw",id:"withdraw",level:4},{value:"disable-refund",id:"disable-refund",level:4}],m={toc:p},i="wrapper";function y(e){let{components:t,...a}=e;return(0,l.kt)(i,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"payment"},"Payment"),(0,l.kt)("h2",{id:"abstract"},"Abstract"),(0,l.kt)("p",null,"The payment module is responsible for the payment of the greenfield network. It is mainly used to manage the payment account of the user, and the payment account is used to pay the storage fee. The payment module also provides the function of automatic settlement of the user's payment account."),(0,l.kt)("p",null,"You can refer to the ",(0,l.kt)("a",{parentName:"p",href:"/greenfield-docs/docs/guide/greenfield-blockchain/modules/billing-and-payment"},"billing and payment section")," for more details."),(0,l.kt)("h2",{id:"quick-start"},"Quick Start"),(0,l.kt)("h3",{id:"create-payment-account"},"Create Payment Account"),(0,l.kt)("p",null,"To create a new payment account, ",(0,l.kt)("inlineCode",{parentName:"p"},"create-payment-account")," can be used."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd tx payment create-payment-account --from ${key} --node ${node} -y\n")),(0,l.kt)("p",null,"${key} is the name of local key."),(0,l.kt)("p",null,"${node} is the rpc address of a Greenfield node."),(0,l.kt)(r.Z,{defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,l.kt)(c.Z,{value:"mainnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'node = "https://greenfield-chain.bnbchain.org:443"\n'))),(0,l.kt)(c.Z,{value:"testnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'node = "https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org:443"\n')))),(0,l.kt)("h3",{id:"query-payment-account"},"Query Payment Account"),(0,l.kt)("p",null,"After the payment account is created, you can query all your payment accounts via the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd q payment get-payment-accounts-by-owner ${owner} --node ${node}\n")),(0,l.kt)("p",null,"${owner} is the owner address you want to query, usually it is the address derived from your key."),(0,l.kt)("p",null,"To query the details of a payment account, the following command can be executed."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd q payment show-payment-account ${payment_account_addr} --node ${node}\n")),(0,l.kt)("p",null,"${payment_account_addr} is the address of the payment account you want to query."),(0,l.kt)("h3",{id:"deposit-to-payment-account"},"Deposit to Payment Account"),(0,l.kt)("p",null,"To deposit to a payment amount, the amount should be provided as the following command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd tx payment deposit ${payment_account_addr} ${amount} --from ${key} --node ${node} -y\n")),(0,l.kt)("p",null,"${amount} defines the BNB amount you want to deposit, e.g., ",(0,l.kt)("inlineCode",{parentName:"p"},"1000000000000000000"),"."),(0,l.kt)("h3",{id:"withdraw-from-payment-account"},"Withdraw from Payment Account"),(0,l.kt)("p",null,"To withdraw from a payment amount, the following command can be used."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd tx payment withdraw ${payment_account_addr} ${amount} --from ${key} --node ${node} -y\n")),(0,l.kt)("p",null,"${amount} defines the BNB amount you want to withdraw, e.g., ",(0,l.kt)("inlineCode",{parentName:"p"},"1000000000000000000"),"."),(0,l.kt)("h3",{id:"disable-refundable"},"Disable Refundable"),(0,l.kt)("p",null,"After disabling withdrawal of payment account, which cannot be reverted, the owner cannot withdraw from the payment account. "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd tx payment disable-refund ${payment_account_addr} --from ${key} -y\n")),(0,l.kt)("h2",{id:"detailed-cli"},"Detailed CLI"),(0,l.kt)("p",null,"A user can query and interact with the ",(0,l.kt)("inlineCode",{parentName:"p"},"payment")," module using the CLI."),(0,l.kt)("h3",{id:"query"},"Query"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"query")," commands allow users to query ",(0,l.kt)("inlineCode",{parentName:"p"},"payment")," state."),(0,l.kt)("h4",{id:"params"},"params"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," command allows users to query the params of the ",(0,l.kt)("inlineCode",{parentName:"p"},"payment")," module."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query payment params [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query payment params --node https://greenfield-chain.bnbchain.org:443\n")),(0,l.kt)("h4",{id:"show-payment-account"},"show-payment-account"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"show-payment-account")," get the payment account by its address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd query payment show-payment-account [addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ gnfd q payment show-payment-account 0x169FFd6893aB4A0f8105BA749A0614cB69a18884\npayment_account:\naddr: 0x169FFd6893aB4A0f8105BA749A0614cB69a18884\nowner: 0x71A3c4521B66da275fb514dd3156fa699B54A341\nrefundable: true\n")),(0,l.kt)("h4",{id:"show-payment-account-count"},"show-payment-account-count"),(0,l.kt)("p",null,"The command ",(0,l.kt)("inlineCode",{parentName:"p"},"show-payment-account-count")," returns the count of payment accounts of a user. "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd query payment show-payment-account-count [owner] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'$ gnfd q payment show-payment-account-count 0x3bA598a3d809702dB4cA8610e14cBAF83908861d\npayment_account_count:\ncount: "1"\nowner: 0x3bA598a3d809702dB4cA8610e14cBAF83908861d\n')),(0,l.kt)("h4",{id:"show-stream-record"},"show-stream-record"),(0,l.kt)("p",null,"The command ",(0,l.kt)("inlineCode",{parentName:"p"},"show-stream-record")," returns the status and balances of a payment account."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd query payment show-stream-record [account] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'$ gnfd q payment show-stream-record 0x0B14B50E07934d9360152CACbd3397fDf9A13be0\nstream_record:\naccount: 0x0B14B50E07934d9360152CACbd3397fDf9A13be0\nbuffer_balance: "0"\ncrud_timestamp: "1680231986"\nlock_balance: "4620383649780"\nnetflow_rate: "0"\nout_flows: []\nsettle_timestamp: "0"\nstatic_balance: "0"\nstatus: STREAM_ACCOUNT_STATUS_ACTIVE\n')),(0,l.kt)("h4",{id:"get-payment-accounts-by-owner"},"get-payment-accounts-by-owner"),(0,l.kt)("p",null,"The command ",(0,l.kt)("inlineCode",{parentName:"p"},"get-payment-accounts-by-owner")," returns all payment accounts of a user."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd query payment get-payment-accounts-by-owner [owner] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ gnfd q payment get-payment-accounts-by-owner 0x0Efc1c24294053a178531CA9EbCD12dC98708953\npaymentAccounts:\n- 0x9B946d99F4AFB629D6c872CE9027f12Cb8cF0772\n")),(0,l.kt)("h4",{id:"dynamic-balance"},"dynamic-balance"),(0,l.kt)("p",null,"The command ",(0,l.kt)("inlineCode",{parentName:"p"},"dynamic-balance")," shows the dynamic balance of a payment account."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd query payment dynamic-balance [account] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'$ gnfd query payment dynamic-balance 0xeb359a735eb2c5e50716bdc0ebdac3a901ffb5b8\navailable_balance: "492302404780385092"\nbank_balance: "492302404615058500"\nchange_rate: "-318"\ncurrent_timestamp: "1697011881"\ndynamic_balance: "164544312"\nlocked_fee: "6675734620800"\nstream_record:\n  account: 0xEb359A735eB2c5E50716bdC0EBdAC3A901ffB5b8\n  buffer_balance: "192326400"\n  crud_timestamp: "1697009421"\n  frozen_netflow_rate: "0"\n  lock_balance: "6675542294400"\n  netflow_rate: "-318"\n  out_flow_count: "4"\n  settle_timestamp: "1698090915"\n  static_balance: "165326592"\n  status: STREAM_ACCOUNT_STATUS_ACTIVE\n')),(0,l.kt)("h3",{id:"transactions"},"Transactions"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"tx")," commands allow users to interact with the ",(0,l.kt)("inlineCode",{parentName:"p"},"payment")," module."),(0,l.kt)("h4",{id:"create-payment-account-1"},"create-payment-account"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"create-payment-account")," command allows users to create a new payment account"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd tx payment create-payment-account [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# create payment account\n$ gnfd tx payment create-payment-account --from validator0\n\n# check the created payment account\n$ gnfd q payment get-payment-accounts-by-owner 0x0Efc1c24294053a178531CA9EbCD12dC98708953\npaymentAccounts:\n- 0x9B946d99F4AFB629D6c872CE9027f12Cb8cF0772\n")),(0,l.kt)("h4",{id:"deposit"},"deposit"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"deposit")," command is used to deposit to a payment account."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd tx payment deposit [to] [amount] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'# deposit 100000000 BNB wei to the payment account\n$ gnfd tx payment deposit 0x9B946d99F4AFB629D6c872CE9027f12Cb8cF0772 100000000 --from validator0\n\n# check the payment account, the static_balance should be 100000000\n$ gnfd q payment show-stream-record 0x9B946d99F4AFB629D6c872CE9027f12Cb8cF0772\nstream_record:\n  account: 0x9B946d99F4AFB629D6c872CE9027f12Cb8cF0772\n  buffer_balance: "0"\n  crud_timestamp: "1680497254"\n  lock_balance: "0"\n  netflow_rate: "0"\n  out_flows: []\n  settle_timestamp: "0"\n  static_balance: "100000000"\n  status: STREAM_ACCOUNT_STATUS_ACTIVE\n')),(0,l.kt)("h4",{id:"withdraw"},"withdraw"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"withdraw")," command is used to deposit to a payment account."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd tx payment withdraw [from] [amount] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'# withdraw from the payment account\n$ gnfd tx payment withdraw 0x9B946d99F4AFB629D6c872CE9027f12Cb8cF0772 100 --from validator0\n\n# check the payment account, the static_balance should be 99999900 now\n$ gnfd q payment show-stream-record 0x9B946d99F4AFB629D6c872CE9027f12Cb8cF0772\nstream_record:\n  account: 0x9B946d99F4AFB629D6c872CE9027f12Cb8cF0772\n  buffer_balance: "0"\n  crud_timestamp: "1680497338"\n  lock_balance: "0"\n  netflow_rate: "0"\n  out_flows: []\n  settle_timestamp: "0"\n  static_balance: "99999900"\n  status: STREAM_ACCOUNT_STATUS_ACTIVE\n')),(0,l.kt)("h4",{id:"disable-refund"},"disable-refund"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"disable-refund")," command is used to disable withdraw of a payment account."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd tx payment disable-refund [addr] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# check the payment account refundable status\n$ gnfd q payment show-payment-account 0x9B946d99F4AFB629D6c872CE9027f12Cb8cF0772\npayment_account:\n  addr: 0x9B946d99F4AFB629D6c872CE9027f12Cb8cF0772\n  owner: 0x0Efc1c24294053a178531CA9EbCD12dC98708953\n  refundable: true\n\n# disable refund\n$ gnfd tx payment disable-refund 0x9B946d99F4AFB629D6c872CE9027f12Cb8cF0772 --from validator0\n\n# check the payment account refundable status again, it should be false now\n$ gnfd q payment show-payment-account 0x9B946d99F4AFB629D6c872CE9027f12Cb8cF0772\npayment_account:\n  addr: 0x9B946d99F4AFB629D6c872CE9027f12Cb8cF0772\n  owner: 0x0Efc1c24294053a178531CA9EbCD12dC98708953\n  refundable: false\n")))}y.isMDXComponent=!0}}]);