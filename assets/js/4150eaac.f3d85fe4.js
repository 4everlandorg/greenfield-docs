"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[2900],{65488:(e,a,n)=>{n.d(a,{Z:()=>p});var t=n(87462),l=n(67294),o=n(86010),r=n(72389),s=n(67392),i=n(7094),u=n(12466);const d={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function c(e){const{lazy:a,block:n,defaultValue:r,values:c,groupId:p,className:m}=e,k=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=c??k.map((e=>{let{props:{value:a,label:n,attributes:t}}=e;return{value:a,label:n,attributes:t}})),h=(0,s.l)(b,((e,a)=>e.value===a.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===r?r:r??k.find((e=>e.props.default))?.props.value??k[0].props.value;if(null!==g&&!b.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:y}=(0,i.U)(),[v,N]=(0,l.useState)(g),T=[],{blockElementScrollPositionUntilNextRender:w}=(0,u.o5)();if(null!=p){const e=f[p];null!=e&&e!==v&&b.some((a=>a.value===e))&&N(e)}const B=e=>{const a=e.currentTarget,n=T.indexOf(a),t=b[n].value;t!==v&&(w(a),N(t),null!=p&&y(p,String(t)))},q=e=>{let a=null;switch(e.key){case"Enter":B(e);break;case"ArrowRight":{const n=T.indexOf(e.currentTarget)+1;a=T[n]??T[0];break}case"ArrowLeft":{const n=T.indexOf(e.currentTarget)-1;a=T[n]??T[T.length-1];break}}a?.focus()};return l.createElement("div",{className:(0,o.Z)("tabs-container",d.tabList)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},m)},b.map((e=>{let{value:a,label:n,attributes:r}=e;return l.createElement("li",(0,t.Z)({role:"tab",tabIndex:v===a?0:-1,"aria-selected":v===a,key:a,ref:e=>T.push(e),onKeyDown:q,onClick:B},r,{className:(0,o.Z)("tabs__item",d.tabItem,r?.className,{"tabs__item--active":v===a})}),n??a)}))),a?(0,l.cloneElement)(k.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},k.map(((e,a)=>(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==v})))))}function p(e){const a=(0,r.Z)();return l.createElement(c,(0,t.Z)({key:String(a)},e))}},42174:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>k,frontMatter:()=>s,metadata:()=>u,toc:()=>c});var t=n(87462),l=(n(67294),n(3905)),o=n(65488),r=n(85162);const s={title:"Account Balance",order:2,category:["cli"]},i="Account Balance",u={unversionedId:"api/blockchain-cli/bank",id:"api/blockchain-cli/bank",title:"Account Balance",description:"Abstract",source:"@site/docs/api/blockchain-cli/bank.md",sourceDirName:"api/blockchain-cli",slug:"/api/blockchain-cli/bank",permalink:"/greenfield-docs/docs/api/blockchain-cli/bank",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/api/blockchain-cli/bank.md",tags:[],version:"current",frontMatter:{title:"Account Balance",order:2,category:["cli"]},sidebar:"apiReferenceSidebar",previous:{title:"Key Management",permalink:"/greenfield-docs/docs/api/blockchain-cli/key-management"},next:{title:"Storage Object",permalink:"/greenfield-docs/docs/api/blockchain-cli/storage"}},d={},c=[{value:"Abstract",id:"abstract",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Query Balances",id:"query-balances",level:3},{value:"Send",id:"send",level:3},{value:"Multi-send",id:"multi-send",level:3},{value:"Detailed CLI",id:"detailed-cli",level:2},{value:"Query",id:"query",level:3},{value:"balances",id:"balances",level:4},{value:"denom-metadata",id:"denom-metadata",level:4},{value:"total",id:"total",level:4},{value:"Transactions",id:"transactions",level:3},{value:"send",id:"send-1",level:4}],p={toc:c},m="wrapper";function k(e){let{components:a,...n}=e;return(0,l.kt)(m,(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"account-balance"},"Account Balance"),(0,l.kt)("h2",{id:"abstract"},"Abstract"),(0,l.kt)("p",null,"The bank module is responsible for handling BNB transfers between\naccounts and module accounts."),(0,l.kt)("p",null,"In addition, the bank module tracks and provides query support for the total\nsupply of BNB in the application."),(0,l.kt)("h2",{id:"quick-start"},"Quick Start"),(0,l.kt)("h3",{id:"query-balances"},"Query Balances"),(0,l.kt)("p",null,"To query the balances of an account, you can use the following command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd q bank balances ${receiver} --node ${node} \n")),(0,l.kt)("p",null,"You can specify any valid address you want to query via ${receiver}."),(0,l.kt)("p",null,"${node} is the rpc address of a Greenfield node."),(0,l.kt)(o.Z,{defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Testnet",value:"testnet"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"mainnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'node = "https://greenfield-chain.bnbchain.org:443"\n'))),(0,l.kt)(r.Z,{value:"testnet",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'node = "https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org:443"\n')))),(0,l.kt)("h3",{id:"send"},"Send"),(0,l.kt)("p",null,"To transfer some coins you can use ",(0,l.kt)("inlineCode",{parentName:"p"},"send")," command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd tx bank send ${key} ${receiver} ${coins} --home ~/.gnfd --node ${node}  -y\n")),(0,l.kt)("p",null,"${key} is the name of local key."),(0,l.kt)("p",null,"${coins} defines the coins you want to transfer, for example, ",(0,l.kt)("inlineCode",{parentName:"p"},"500000000000000000000BNB"),"."),(0,l.kt)("h3",{id:"multi-send"},"Multi-send"),(0,l.kt)("p",null,"Sometimes, you may want to transfer tokens to multiple people. ",(0,l.kt)("inlineCode",{parentName:"p"},"multi-send")," command can be used for the purpose."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd tx bank multi-send ${key} ${receiver1} ${receiver2} ${coins} --home ~/.gnfd --node ${node}  -y\n")),(0,l.kt)("h2",{id:"detailed-cli"},"Detailed CLI"),(0,l.kt)("p",null,"A user can query and interact with the ",(0,l.kt)("inlineCode",{parentName:"p"},"bank")," module using the CLI."),(0,l.kt)("h3",{id:"query"},"Query"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"query")," commands allow users to query ",(0,l.kt)("inlineCode",{parentName:"p"},"bank")," state."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query bank --help\n")),(0,l.kt)("h4",{id:"balances"},"balances"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"balances")," command allows users to query account balances by address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query bank balances [address] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query bank balances 0x73a4Cf67b46D7E4efbb95Fc6F59D64129299c2E3\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},'balances:\n- amount: "10000000000000000000000"\n  denom: BNB\npagination:\n  next_key: null\n  total: "0"\n')),(0,l.kt)("h4",{id:"denom-metadata"},"denom-metadata"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"denom-metadata")," command allows users to query metadata for coin denominations. A user can query metadata for a single denomination using the ",(0,l.kt)("inlineCode",{parentName:"p"},"--denom")," flag or all denominations without it."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query bank denom-metadata [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query bank denom-metadata --denom BNB\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},'metadata:\n  base: BNB\n  denom_units:\n    - aliases:\n        - wei\n      denom: BNB\n      exponent: 0\n  description: The native staking token of the Greenfield.\n  display: BNB\n  name: ""\n  symbol: ""\n  uri: ""\n  uri_hash: ""\n')),(0,l.kt)("h4",{id:"total"},"total"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"total")," command allows users to query the total supply of coins. A user can query the total supply for a single coin using the ",(0,l.kt)("inlineCode",{parentName:"p"},"--denom")," flag or all coins without it."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query bank total [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd query bank total --denom BNB\n")),(0,l.kt)("p",null,"Example Output:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},'amount: "1000000000000000800000000000"\ndenom: BNB\n')),(0,l.kt)("h3",{id:"transactions"},"Transactions"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"tx")," commands allow users to interact with the ",(0,l.kt)("inlineCode",{parentName:"p"},"bank")," module."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx bank --help\n")),(0,l.kt)("h4",{id:"send-1"},"send"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"send")," command allows users to send funds from one account to another."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx bank send [from_key_or_address] [to_address] [amount] [flags]\n")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"gnfd tx bank send addr1.. addr2.. 100000000000000000000BNB\n")))}k.isMDXComponent=!0}}]);