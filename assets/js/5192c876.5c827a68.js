"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[84],{65488:(e,a,t)=>{t.d(a,{Z:()=>p});var n=t(87462),r=t(67294),l=t(86010),o=t(72389),i=t(67392),d=t(7094),s=t(12466);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function c(e){const{lazy:a,block:t,defaultValue:o,values:c,groupId:p,className:m}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=c??g.map((e=>{let{props:{value:a,label:t,attributes:n}}=e;return{value:a,label:t,attributes:n}})),h=(0,i.l)(k,((e,a)=>e.value===a.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===o?o:o??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==b&&!k.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:v}=(0,d.U)(),[f,N]=(0,r.useState)(b),_=[],{blockElementScrollPositionUntilNextRender:E}=(0,s.o5)();if(null!=p){const e=y[p];null!=e&&e!==f&&k.some((a=>a.value===e))&&N(e)}const D=e=>{const a=e.currentTarget,t=_.indexOf(a),n=k[t].value;n!==f&&(E(a),N(n),null!=p&&v(p,String(n)))},A=e=>{let a=null;switch(e.key){case"Enter":D(e);break;case"ArrowRight":{const t=_.indexOf(e.currentTarget)+1;a=_[t]??_[0];break}case"ArrowLeft":{const t=_.indexOf(e.currentTarget)-1;a=_[t]??_[_.length-1];break}}a?.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":t},m)},k.map((e=>{let{value:a,label:t,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:f===a?0:-1,"aria-selected":f===a,key:a,ref:e=>_.push(e),onKeyDown:A,onClick:D},o,{className:(0,l.Z)("tabs__item",u.tabItem,o?.className,{"tabs__item--active":f===a})}),t??a)}))),a?(0,r.cloneElement)(g.filter((e=>e.props.value===f))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==f})))))}function p(e){const a=(0,o.Z)();return r.createElement(c,(0,n.Z)({key:String(a)},e))}},59564:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>d,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=t(87462),r=(t(67294),t(3905)),l=t(65488),o=t(85162);const i={title:"Become Validator",order:6},d="Become Validator",s={unversionedId:"guide/greenfield-blockchain/run-node/become-validator",id:"guide/greenfield-blockchain/run-node/become-validator",title:"Become Validator",description:"Minimum Requirements",source:"@site/docs/guide/greenfield-blockchain/run-node/become-validator.md",sourceDirName:"guide/greenfield-blockchain/run-node",slug:"/guide/greenfield-blockchain/run-node/become-validator",permalink:"/greenfield-docs/docs/guide/greenfield-blockchain/run-node/become-validator",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/guide/greenfield-blockchain/run-node/become-validator.md",tags:[],version:"current",frontMatter:{title:"Become Validator",order:6},sidebar:"guideSidebar",previous:{title:"Run Challenger",permalink:"/greenfield-docs/docs/guide/greenfield-blockchain/run-node/run-challenger"},next:{title:"Overview",permalink:"/greenfield-docs/docs/guide/storage-provider/introduction/overview"}},u={},c=[{value:"Minimum Requirements",id:"minimum-requirements",level:2},{value:"Setting up Validator Node",id:"setting-up-validator-node",level:2},{value:"1. Install Fullnode",id:"1-install-fullnode",level:3},{value:"2. Prepare validator, delegator, validator BLS, relayer, and challenger accounts",id:"2-prepare-validator-delegator-validator-bls-relayer-and-challenger-accounts",level:3},{value:"3.  Obtain validator, delegator, validator BLS, relayer, and challenger account addresses",id:"3--obtain-validator-delegator-validator-bls-relayer-and-challenger-account-addresses",level:3},{value:"4. Submit a Create Validator Proposal",id:"4-submit-a-create-validator-proposal",level:3},{value:"4.1 Run create validator command to submit the proposal by local keys. Ensure the delegator account has enough BNB tokens.",id:"41-run-create-validator-command-to-submit-the-proposal-by-local-keys-ensure-the-delegator-account-has-enough-bnb-tokens",level:3},{value:"4.2 submit the proposal by <code>gnfd-tx-sender</code>. Ensure the delegator account has enough BNB tokens.",id:"42-submit-the-proposal-by-gnfd-tx-sender-ensure-the-delegator-account-has-enough-bnb-tokens",level:3},{value:"5. Wait for the voting until the Proposal is passed.",id:"5-wait-for-the-voting-until-the-proposal-is-passed",level:3},{value:"6. Query all validators",id:"6-query-all-validators",level:3}],p={toc:c},m="wrapper";function g(e){let{components:a,...i}=e;return(0,r.kt)(m,(0,n.Z)({},p,i,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"become-validator"},"Become Validator"),(0,r.kt)("h2",{id:"minimum-requirements"},"Minimum Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Number of BNB to be staked: ",(0,r.kt)("inlineCode",{parentName:"li"},"1000BNB")),(0,r.kt)("li",{parentName:"ul"},"Hardware Requirements:  Desktop or laptop hardware running recent versions of Mac OS X, or Linux."),(0,r.kt)("li",{parentName:"ul"},"CPU: 4 cores"),(0,r.kt)("li",{parentName:"ul"},"RAM: 12 GB"),(0,r.kt)("li",{parentName:"ul"},"HDD/SDD: 1 TB"),(0,r.kt)("li",{parentName:"ul"},"Bandwidth: 1 MB/s"),(0,r.kt)("li",{parentName:"ul"},"Slashing details: No slashing will occur for validator so far.")),(0,r.kt)("h2",{id:"setting-up-validator-node"},"Setting up Validator Node"),(0,r.kt)("h3",{id:"1-install-fullnode"},"1. Install Fullnode"),(0,r.kt)("p",null,"Follow the instructions ",(0,r.kt)("a",{parentName:"p",href:"/greenfield-docs/docs/guide/greenfield-blockchain/run-node/"},"here to set up a full node"),"."),(0,r.kt)("h3",{id:"2-prepare-validator-delegator-validator-bls-relayer-and-challenger-accounts"},"2. Prepare validator, delegator, validator BLS, relayer, and challenger accounts"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"The current key generation and storage procedures are not very secure. It is highly recommended to implement a more robust method, particularly when dealing with keys like the ",(0,r.kt)("inlineCode",{parentName:"p"},"delegator")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"operator")," keys."),(0,r.kt)("p",{parentName:"admonition"},"For enhanced security and best practices, the usage of the ",(0,r.kt)("inlineCode",{parentName:"p"},"coldwallet")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"MPC")," wallet is strongly encouraged. These wallets are fully compatible with the ",(0,r.kt)("inlineCode",{parentName:"p"},"gnfd-tx-sender")," tool, and for further information and guidance, please consult the ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://gnfd-tx-sender.nodereal.io/"},"gnfd-tx-sender documentation")),".")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"keyring-backend")," supports multiple storage backends, some of which may not be available on all operating systems.\nSee more details ",(0,r.kt)("a",{parentName:"p",href:"/greenfield-docs/docs/guide/core-concept/key-management"},"here"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gnfd keys add validator --keyring-backend test\ngnfd keys add delegator --keyring-backend test\ngnfd keys add validator_bls --keyring-backend test --algo eth_bls\ngnfd keys add validator_relayer --keyring-backend test\ngnfd keys add validator_challenger --keyring-backend test\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Alternatively, if you choose a different $KEY_HOME location and you are not using the suggested default ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.gnfd"),", you may start the full node by using below script, where $KEY_HOME is your selected directory.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gnfd keys add validator --keyring-backend test --home ${KEY_HOME}\ngnfd keys add delegator --keyring-backend test --home ${KEY_HOME}\ngnfd keys add validator_bls --keyring-backend test --algo eth_bls --home ${KEY_HOME}\ngnfd keys add validator_relayer --keyring-backend test --home ${KEY_HOME}\ngnfd keys add validator_challenger --keyring-backend test --home ${KEY_HOME}\n")),(0,r.kt)("h3",{id:"3--obtain-validator-delegator-validator-bls-relayer-and-challenger-account-addresses"},"3.  Obtain validator, delegator, validator BLS, relayer, and challenger account addresses"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Ensure you choose the correct --keyring-backend and that --home is set correctly if you saved the files in a custom folder in ",(0,r.kt)("inlineCode",{parentName:"p"},"step 2"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"VALIDATOR_ADDR=$(gnfd keys show validator -a --keyring-backend test)\nDELEGATOR_ADDR=$(gnfd keys show delegator -a --keyring-backend test)\nRELAYER_ADDR=$(gnfd keys show validator_relayer -a --keyring-backend test)\nCHALLENGER_ADDR=$(gnfd keys show validator_challenger -a --keyring-backend test)\nVALIDATOR_BLS=$(gnfd keys show validator_bls --keyring-backend test --output json | jq -r '.pubkey_hex')\nVALIDATOR_BLS_PROOF=$(gnfd keys sign ${VALIDATOR_BLS} --keyring-backend test --from validator_bls)\nVALIDATOR_NODE_PUB_KEY=$(cat ${CONFIG_PATH}/config/priv_validator_key.json | jq -r '.pub_key.value')\n")),(0,r.kt)("h3",{id:"4-submit-a-create-validator-proposal"},"4. Submit a Create Validator Proposal"),(0,r.kt)("p",null,"Replace the values in the following JSON and save it as create_validator_proposal.json:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"${NODE_NAME}"),": A custom human-readable name for this node."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"${VALIDATOR_NODE_PUB_KEY}"),": The consensus key generated in step 1 (stored in ${HOME}/.gnfd/config/priv_validator_key.json by default)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"${VALIDATOR_ADDR}"),": The operator address created in step 2."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"${DELEGATOR_ADDR}"),": The delegator address created in step 2."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"${VALIDATOR_BLS}"),": The BLS key created in step 2."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"${VALIDATOR_BLS_PROOF}"),": The BLS proof created in step2."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"${RELAYER_ADDR}"),": The relayer address created in step 2."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"${CHALLENGER_ADDR}"),": The challenger address created in step 2.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n "messages": [\n  {\n   "@type": "/cosmos.staking.v1beta1.MsgCreateValidator",\n   "description": {\n    "moniker": "${NODE_NAME}",\n    "identity": "",\n    "website": "",\n    "security_contact": "",\n    "details": ""\n   },\n   "commission": {\n    "rate": "0.070000000000000000",\n    "max_rate": "1.000000000000000000",\n    "max_change_rate": "0.010000000000000000"\n   },\n   "min_self_delegation": "1000000000000000000000",\n   "delegator_address": "${DELEGATOR_ADDR}",\n   "validator_address": "${VALIDATOR_ADDR}",\n   "pubkey": {\n    "@type": "/cosmos.crypto.ed25519.PubKey",\n    "key": "${VALIDATOR_NODE_PUB_KEY}"\n   },\n   "value": {\n    "denom": "BNB",\n    "amount": "1000000000000000000000"\n   },\n   "from": "0x7b5Fe22B5446f7C62Ea27B8BD71CeF94e03f3dF2",\n   "relayer_address": "${RELAYER_ADDR}",\n   "challenger_address": "${CHALLENGER_ADDR}",\n   "bls_key": "${VALIDATOR_BLS}", \n   "bls_proof": "${VALIDATOR_BLS_PROOF}"\n  }\n ],\n "metadata": "",\n "title": "Create ${NODE_NAME} Validator",\n "summary": "create ${NODE_NAME} validator",\n "deposit": "1000000000000000000BNB"\n}\n')),(0,r.kt)("h3",{id:"41-run-create-validator-command-to-submit-the-proposal-by-local-keys-ensure-the-delegator-account-has-enough-bnb-tokens"},"4.1 Run create validator command to submit the proposal by local keys. Ensure the delegator account has enough BNB tokens."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you are utilizing the ",(0,r.kt)("inlineCode",{parentName:"p"},"coldwallet")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"MPC")," wallet, please proceed to step ",(0,r.kt)("a",{parentName:"p",href:"#42-submit-the-proposal-by-gnfd-tx-sender-ensure-the-delegator-account-has-enough-bnb-tokens"},"#4.2"),".")),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"mainnet",label:"Mainnet",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'gnfd tx staking create-validator ./create_validator_proposal.json --keyring-backend test --chain-id "greenfield_1017-1" --from ${DELEGATOR_ADDR} --node "https://greenfield-chain.bnbchain.org:443" -b sync --gas "200000000" --fees "1000000000000000000BNB" --yes\n'))),(0,r.kt)(o.Z,{value:"testnet",label:"Testnet",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'gnfd tx staking create-validator ./create_validator_proposal.json --keyring-backend test --chain-id "greenfield_5600-1" --from ${DELEGATOR_ADDR} --node "https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org:443" -b sync --gas "200000000" --fees "1000000000000000000BNB" --yes\n')))),(0,r.kt)("h3",{id:"42-submit-the-proposal-by-gnfd-tx-sender-ensure-the-delegator-account-has-enough-bnb-tokens"},"4.2 submit the proposal by ",(0,r.kt)("inlineCode",{parentName:"h3"},"gnfd-tx-sender"),". Ensure the delegator account has enough BNB tokens."),(0,r.kt)("p",null,"Run command to generate the transaction details."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gnfd tx staking create-validator ./create_validator_proposal.json --from ${DELEGATOR_ADDR} --print-eip712-msg-type\n")),(0,r.kt)("p",null,"Submit the proposal by ",(0,r.kt)("inlineCode",{parentName:"p"},"gnfd-tx-sender"),".\n",(0,r.kt)("img",{alt:"submit-proposal",src:t(271).Z,width:"1094",height:"1154"})),(0,r.kt)("h3",{id:"5-wait-for-the-voting-until-the-proposal-is-passed"},"5. Wait for the voting until the Proposal is passed."),(0,r.kt)("p",null,"After submitting the proposal successfully, you must wait for the voting to be completed and the proposal to be approved.\nIt will last 7days on mainnet while 1 day on testnet. Once it has passed and is executed successfully,\nyou can verify that the node has become a validator. "),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Please ensure that the validator node is running before it is selected.")),(0,r.kt)("h3",{id:"6-query-all-validators"},"6. Query all validators"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"mainnet",label:"Mainnet",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'gnfd query staking validators --node "https://greenfield-chain.bnbchain.org:443"\n\n'))),(0,r.kt)(o.Z,{value:"testnet",label:"Testnet",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'gnfd query staking validators --node "https://gnfd-testnet-fullnode-tendermint-us.bnbchain.org:443"\n')))))}g.isMDXComponent=!0},271:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/14-gnfd-tx-sender-d7366d4ec51cb954f700421d2e001adb.png"}}]);