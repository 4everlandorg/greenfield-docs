"use strict";(self.webpackChunkgreenfield_docs=self.webpackChunkgreenfield_docs||[]).push([[1540],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=u(t),m=a,f=c["".concat(s,".").concat(m)]||c[m]||p[m]||o;return t?r.createElement(f,l(l({ref:n},d),{},{components:t})):r.createElement(f,l({ref:n},d))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(67294),a=t(86010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,l),hidden:t},n)}},65488:(e,n,t)=>{t.d(n,{Z:()=>p});var r=t(87462),a=t(67294),o=t(86010),l=t(72389),i=t(67392),s=t(7094),u=t(12466);const d={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function c(e){const{lazy:n,block:t,defaultValue:l,values:c,groupId:p,className:m}=e,f=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=c??f.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),h=(0,i.l)(g,((e,n)=>e.value===n.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===l?l:l??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==b&&!g.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:y}=(0,s.U)(),[N,v]=(0,a.useState)(b),w=[],{blockElementScrollPositionUntilNextRender:O}=(0,u.o5)();if(null!=p){const e=k[p];null!=e&&e!==N&&g.some((n=>n.value===e))&&v(e)}const E=e=>{const n=e.currentTarget,t=w.indexOf(n),r=g[t].value;r!==N&&(O(n),v(r),null!=p&&y(p,String(r)))},C=e=>{let n=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;n=w[t]??w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;n=w[t]??w[w.length-1];break}}n?.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",d.tabList)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},m)},g.map((e=>{let{value:n,label:t,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===n?0:-1,"aria-selected":N===n,key:n,ref:e=>w.push(e),onKeyDown:C,onClick:E},l,{className:(0,o.Z)("tabs__item",d.tabItem,l?.className,{"tabs__item--active":N===n})}),t??n)}))),n?(0,a.cloneElement)(f.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},f.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==N})))))}function p(e){const n=(0,l.Z)();return a.createElement(c,(0,r.Z)({key:String(n)},e))}},7351:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var r=t(87462),a=(t(67294),t(3905)),o=t(65488),l=t(85162);const i={title:"Run Node",order:4},s="Run Node",u={unversionedId:"guide/greenfield-blockchain/run-node/run-node",id:"guide/greenfield-blockchain/run-node/run-node",title:"Run Node",description:"Minimum System Requirements",source:"@site/docs/guide/greenfield-blockchain/run-node/run-node.md",sourceDirName:"guide/greenfield-blockchain/run-node",slug:"/guide/greenfield-blockchain/run-node/",permalink:"/greenfield-docs/docs/guide/greenfield-blockchain/run-node/",draft:!1,editUrl:"https://github.com/bnb-chain/greenfield-docs/blob/main/docs/guide/greenfield-blockchain/run-node/run-node.md",tags:[],version:"current",frontMatter:{title:"Run Node",order:4},sidebar:"guideSidebar",previous:{title:"Run Local Network",permalink:"/greenfield-docs/docs/guide/greenfield-blockchain/run-node/run-local-network"},next:{title:"Run Relayer",permalink:"/greenfield-docs/docs/guide/greenfield-blockchain/run-node/run-relayer"}},d={},c=[{value:"Minimum System Requirements",id:"minimum-system-requirements",level:2},{value:"Setting Up a New Node",id:"setting-up-a-new-node",level:2},{value:"Additional Configuration",id:"additional-configuration",level:3},{value:"Get Extra Information From Your Fullnode",id:"get-extra-information-from-your-fullnode",level:2},{value:"Monitor Syncing Process",id:"monitor-syncing-process",level:5},{value:"Prometheus Metrics",id:"prometheus-metrics",level:2},{value:"Tools",id:"tools",level:2}],p={toc:c},m="wrapper";function f(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"run-node"},"Run Node"),(0,a.kt)("h2",{id:"minimum-system-requirements"},"Minimum System Requirements"),(0,a.kt)("p",null,"The hardware must meet certain requirements to run a Full Node."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Desktop or laptop hardware running recent versions of Mac OS X, or Linux."),(0,a.kt)("li",{parentName:"ul"},"1 TB of free disk space, accessible at a minimum read/write speed of 100 MB/s."),(0,a.kt)("li",{parentName:"ul"},"4 cores of CPU and 12 gigabytes of memory (RAM)."),(0,a.kt)("li",{parentName:"ul"},"A broadband Internet connection with upload/download speeds of at least 1 megabyte per second.")),(0,a.kt)("h2",{id:"setting-up-a-new-node"},"Setting Up a New Node"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Please check the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/bnb-chain/greenfield/releases/latest"},"greenfield repo")," for information, including the correct version of the binaries to use and details about the config file")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"You need to choose a home folder ",(0,a.kt)("inlineCode",{parentName:"li"},"$NODE_HOME")," (i.e. ~/.gnfd) for Greenfield Chain. You can setup this by:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mkdir ~/.gnfd\nmkdir ~/.gnfd/config\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Download ",(0,a.kt)("inlineCode",{parentName:"li"},"app.toml"),",  ",(0,a.kt)("inlineCode",{parentName:"li"},"config.toml")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"genesis.json")," from ",(0,a.kt)("inlineCode",{parentName:"li"},"https://github.com/bnb-chain/greenfield/releases")," and copy them into ",(0,a.kt)("inlineCode",{parentName:"li"},"$NODE_HOME/config"))),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"mainnet",label:"Mainnet",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'wget  $(curl -s https://api.github.com/repos/bnb-chain/greenfield/releases/latest |grep browser_ |grep mainnet_config |cut -d\\" -f4)\nunzip mainnet_config.zip\ncp mainnet_config/*  ~/.gnfd/config/\n'))),(0,a.kt)(l.Z,{value:"testnet",label:"Testnet",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'wget  $(curl -s https://api.github.com/repos/bnb-chain/greenfield/releases/latest |grep browser_ |grep testnet_config |cut -d\\" -f4)\nunzip testnet_config.zip\ncp testnet_config/*  ~/.gnfd/config/\n')))),(0,a.kt)("p",null,"You can edit this moniker later, in the ",(0,a.kt)("inlineCode",{parentName:"p"},"$NODE_HOME/config/config.toml")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'# A custom human readable name for this node\nmoniker = "<your_custom_moniker>"\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Monikers can contain only ASCII characters. Using Unicode characters will render your node unreachable. ")),(0,a.kt)("p",null,"Now your Full Node has been initialized."),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Start your Full Node.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd start\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Alternatively, if you choose a different $NODE_HOME location and you are not using the suggested default ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.gnfd"),", you may start the full node by using below script, where $NODE_HOME is your selected directory. "),(0,a.kt)("p",{parentName:"admonition"},"Example: If you set ",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/local/gnfd")," as your home directory. Run the Full Node with below command."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"gnfd start --home /usr/local/gnfd\n"))),(0,a.kt)("p",null,"If you encounter any issue when running a Full Node, you should read the FAQ provided ",(0,a.kt)("a",{parentName:"p",href:"/greenfield-docs/docs/faq/greenfield-faqs"},"here"),"."),(0,a.kt)("h3",{id:"additional-configuration"},"Additional Configuration"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Seed node: Your Full Node needs to know how to find peers in the blockchain network. You'll need to add healthy seed nodes to $NODE_HOME/config/config.toml. The recommended ",(0,a.kt)("inlineCode",{parentName:"p"},"config.toml")," already contains links to some seed nodes.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Service Port: RPC service listens on port ",(0,a.kt)("inlineCode",{parentName:"p"},"26657")," and P2P service listens on port ",(0,a.kt)("inlineCode",{parentName:"p"},"26656")," by default.\nMake sure these two ports are open before starting a full node, unless the full node has to listen on other ports.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Store: All the state and block data will store under ",(0,a.kt)("inlineCode",{parentName:"p"},"$NODE_HOME/data"),", do not delete or edit any of these files."))),(0,a.kt)("h2",{id:"get-extra-information-from-your-fullnode"},"Get Extra Information From Your Fullnode"),(0,a.kt)("p",null,"If you have a Full Node running, then you can publish extra messages to local files."),(0,a.kt)("h5",{id:"monitor-syncing-process"},"Monitor Syncing Process"),(0,a.kt)("p",null,"You can verify if state sync is done by ",(0,a.kt)("inlineCode",{parentName:"p"},"curl localhost:26657/status")," several times and see whether ",(0,a.kt)("inlineCode",{parentName:"p"},"latest_block_height")," is increasing in response."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'"sync_info": {\n  ...\n  "latest_block_height": "280072",\n  "latest_block_time": "2023-04-07T01:58:13.572249854Z",\n  ...\n}\n')),(0,a.kt)("h2",{id:"prometheus-metrics"},"Prometheus Metrics"),(0,a.kt)("p",null,"Prometheus is enabled on port ",(0,a.kt)("inlineCode",{parentName:"p"},"26660")," by default, and the endpoint is ",(0,a.kt)("inlineCode",{parentName:"p"},"/metrics"),"."),(0,a.kt)("h2",{id:"tools"},"Tools"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://greenfieldscan.com/"},"Explorer"))))}f.isMDXComponent=!0}}]);